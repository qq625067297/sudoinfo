Command Line: ./PCIECVApp -bdf 112:1.0 -td 1.63 -r all 
PCIECVApp.exe version: 5.0.195.0 -rwxr-xr-x 1 root root 1373512 2æœˆ  18 15:40 PCIECVApp

Motherboard: sd-h3c-uniserver-r4900-g6
    description: Rack Mount Chassis
    product: H3C UniServer R4900 G6 (0)
    vendor: New H3C Technologies Co., Ltd.
    version: N/A
    serial: 210235A4HDH244000029
    width: 64 bits
    capabilities: smbios-3.6.0 dmi-3.6.0 smp vsyscall32

Operating System: Linux sd-H3C-UniServer-R4900-G6 5.15.0-124-generic #134~20.04.1-Ubuntu SMP Tue Oct 1 15:27:33 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux

Using Segment 0 with Max Bus 255 from ACPI MCFG Table.

	DUTs   B: D:F VenID DevID   ClassCode	DeviceType	Device Class
------------------------------------------------------------------------------------------
NEW:	  1)   0:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	  2)   0:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	  3)   0:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	  4)   0:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	  5)   0:14:0  8086  1BBE   0x060400	Root Port	PCI-to-PCI Bridge
	       0:20:0  8086  1BCD   0x0C        Type 0 Hdr	Serial Bus Controller
	       0:20:2  8086  1BCE   0x05        Type 0 Hdr	Memory Controller
NEW:	  6)   0:20:4  8086  1BFE   0x060000	RC IntEP	Host Bridge
NEW:	  7)   0:21:0  8086  1BFF   0x088000	RC IntEP	Other Base System Component
	       0:22:0  8086  1BE0   0x07        Type 0 Hdr	Communications Controller
	       0:22:1  8086  1BE1   0x07        Type 0 Hdr	Communications Controller
	       0:22:4  8086  1BE4   0x07        Type 0 Hdr	Communications Controller
	       0:23:0  8086  1BA2   0x01        Type 0 Hdr	Mass Storage Controller
	       0:24:0  8086  1BF2   0x01        Type 0 Hdr	Mass Storage Controller
	       0:25:0  8086  1BD2   0x01        Type 0 Hdr	Mass Storage Controller
	       0:31:0  8086  1B81   0x06        Type 0 Hdr	Bridge
	       0:31:4  8086  1BC9   0x0C        Type 0 Hdr	Serial Bus Controller
	       0:31:5  8086  1BCA   0x0C        Type 0 Hdr	Serial Bus Controller
NEW:	  8)   1:00:0  1A03  1150   0x060400	PCIe->PCI
	       2:00:0  1A03  2000   0x03        Type 0 Hdr	Display Controller
NEW:	  9)  22:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	 10)  22:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	 11)  22:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	 12)  22:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	 13)  22:01:0  8086  352A   0x060400	Root Port	PCI-to-PCI Bridge
NEW:	 14)  66:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	 15)  66:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	 16)  66:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	 17)  66:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	 18)  66:01:0  8086  352A   0x060400	Root Port	PCI-to-PCI Bridge
NEW:	 19)  67:00:0  1000  0016   0x010400	EndPoint	RAID Mass Storage Controller
NEW:	 20) 110:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	 21) 110:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	 22) 110:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	 23) 110:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	 24) 110:01:0  8086  352A   0x060400	Root Port	PCI-to-PCI Bridge
NEW:	 25) 111:00:0  205E  5104   0x060400	Switch Up	PCI-to-PCI Bridge
NEW:	 26) 112:01:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 27) 112:02:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 28) 112:03:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 29) 112:04:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 30) 112:28:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 31) 112:29:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 32) 112:30:0  205E  5104   0x060400	Switch Dwn	PCI-to-PCI Bridge
NEW:	 33) 113:00:0  144D  A824   0x010802	EndPoint	NVMe Mass Storage Controller
NEW:	 34) 117:00:0  205E  0030   0x010802	EndPoint	NVMe Mass Storage Controller
NEW:	 35) 118:00:0  205E  0020   0x088000	EndPoint	Other Base System Component
NEW:	 36) 119:00:0  205E  0020   0x088000	EndPoint	Other Base System Component
NEW:	 37) 154:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	 38) 154:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	 39) 154:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	 40) 154:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	 41) 198:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	 42) 198:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	 43) 198:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	 44) 198:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	 45) 242:00:0  8086  09A2   0x088000	RC IntEP	Other Base System Component
NEW:	 46) 242:00:1  8086  09A4   0x088000	RC IntEP	Other Base System Component
NEW:	 47) 242:00:2  8086  09A3   0x088000	RC IntEP	Other Base System Component
NEW:	 48) 242:00:4  8086  0B23   0x080700	RC EvtColl	RC Event Collector Base System Component
NEW:	 49) 242:01:0  8086  0B25   0x088000	RC IntEP	Other Base System Component
NEW:	 50) 242:03:0  8086  09A6   0x088000	RC IntEP	Other Base System Component
NEW:	 51) 242:03:1  8086  09A7   0x088000	RC IntEP	Other Base System Component
NEW:	 52) 254:00:0  8086  3250   0x088000	RC IntEP	Other Base System Component
NEW:	 53) 254:00:1  8086  3251   0x088000	RC IntEP	Other Base System Component
NEW:	 54) 254:00:2  8086  3252   0x088000	RC IntEP	Other Base System Component
NEW:	 55) 254:00:3  8086  0998   0x060000	RC IntEP	Host Bridge
NEW:	 56) 254:00:5  8086  3255   0x088000	RC IntEP	Other Base System Component
NEW:	 57) 254:01:0  8086  3240   0x088000	RC IntEP	Other Base System Component
NEW:	 58) 254:01:1  8086  3241   0x088000	RC IntEP	Other Base System Component
NEW:	 59) 254:01:2  8086  3242   0x088000	RC IntEP	Other Base System Component
NEW:	 60) 254:02:0  8086  3240   0x088000	RC IntEP	Other Base System Component
NEW:	 61) 254:02:1  8086  3241   0x088000	RC IntEP	Other Base System Component
NEW:	 62) 254:02:2  8086  3242   0x088000	RC IntEP	Other Base System Component
NEW:	 63) 254:03:0  8086  3240   0x088000	RC IntEP	Other Base System Component
NEW:	 64) 254:03:1  8086  3241   0x088000	RC IntEP	Other Base System Component
NEW:	 65) 254:03:2  8086  3242   0x088000	RC IntEP	Other Base System Component
NEW:	 66) 254:05:0  8086  3245   0x088000	RC IntEP	Other Base System Component
NEW:	 67) 254:05:1  8086  3246   0x088000	RC IntEP	Other Base System Component
NEW:	 68) 254:05:2  8086  3247   0x088000	RC IntEP	Other Base System Component
NEW:	 69) 254:06:0  8086  3245   0x088000	RC IntEP	Other Base System Component
NEW:	 70) 254:06:1  8086  3246   0x088000	RC IntEP	Other Base System Component
NEW:	 71) 254:06:2  8086  3247   0x088000	RC IntEP	Other Base System Component
NEW:	 72) 254:07:0  8086  3245   0x088000	RC IntEP	Other Base System Component
NEW:	 73) 254:07:1  8086  3246   0x088000	RC IntEP	Other Base System Component
NEW:	 74) 254:07:2  8086  3247   0x088000	RC IntEP	Other Base System Component
NEW:	 75) 254:12:0  8086  324A   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 76) 254:13:0  8086  324A   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 77) 254:14:0  8086  324A   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 78) 254:15:0  8086  324A   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 79) 254:26:0  8086  2880   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 80) 254:27:0  8086  2880   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 81) 254:28:0  8086  2880   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 82) 254:29:0  8086  2880   0x110100	RC IntEP	Performance counters Signal Processing Controller
NEW:	 83) 255:00:0  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 84) 255:00:1  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 85) 255:00:2  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 86) 255:00:3  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 87) 255:00:4  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 88) 255:00:5  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 89) 255:00:6  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 90) 255:00:7  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 91) 255:01:0  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 92) 255:01:1  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 93) 255:01:2  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 94) 255:01:3  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 95) 255:01:4  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 96) 255:01:5  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 97) 255:01:6  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 98) 255:01:7  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	 99) 255:02:0  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	100) 255:02:1  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	101) 255:02:2  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	102) 255:02:3  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	103) 255:02:4  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	104) 255:02:5  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	105) 255:02:6  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	106) 255:02:7  8086  324C   0x088000	RC IntEP	Other Base System Component
NEW:	107) 255:10:0  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	108) 255:10:1  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	109) 255:10:2  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	110) 255:10:3  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	111) 255:10:4  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	112) 255:10:5  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	113) 255:10:6  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	114) 255:10:7  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	115) 255:11:0  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	116) 255:11:1  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	117) 255:11:2  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	118) 255:11:3  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	119) 255:11:4  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	120) 255:11:5  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	121) 255:11:6  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	122) 255:11:7  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	123) 255:12:0  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	124) 255:12:1  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	125) 255:12:2  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	126) 255:12:3  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	127) 255:12:4  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	128) 255:12:5  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	129) 255:12:6  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	130) 255:12:7  8086  324D   0x088000	RC IntEP	Other Base System Component
NEW:	131) 255:29:0  8086  344F   0x088000	RC IntEP	Other Base System Component
NEW:	132) 255:29:1  8086  3457   0x088000	RC IntEP	Other Base System Component
	     255:30:0  8086  3258   0x08        Type 0 Hdr	Base System Component
	     255:30:1  8086  3259   0x08        Type 0 Hdr	Base System Component
	     255:30:2  8086  325A   0x08        Type 0 Hdr	Base System Component
	     255:30:3  8086  325B   0x08        Type 0 Hdr	Base System Component
	     255:30:4  8086  325C   0x08        Type 0 Hdr	Base System Component
	     255:30:5  8086  325D   0x08        Type 0 Hdr	Base System Component
	     255:30:6  8086  325E   0x08        Type 0 Hdr	Base System Component
	     255:30:7  8086  325F   0x08        Type 0 Hdr	Base System Component

65384 Bus:Device:Functions scanned with invalid Vendor ID(s) 
   20 non-PCI(e) devices (or Header only) found.
Max Bus Number to scan: 255
Begin PCIECV Test at: 2025/03/17 22:37:25
Spec Rev: Test against 5.0 spec only
Device Type:  Switch Downstream Port
           Selected DUT:  112:01:0 VenID= 205E DevID= 5104 [Unknown]	PCI-to-PCI Bridge
Downstream Link Partner:  113:00:0 VenID= 144D DevID= A824 {Samsung Electronics Co., Ltd.}	NVMe Mass Storage Controller
Number of Retimers in Link:  0

ALERT:  DUT is 32GT/s capable, but the Link Partner is only 16GT/s capable.
Maximum timeout from reset de-assertion to first allowed Cfg command:      10000ms. (1000ms max for IL)
Minimum delay from reset de-assertion (and DL_Up when applicable) to first Type 0 Cfg access attempt:  1000ms. ( 100ms max for IL)
Minimum delay from reset de-assertion (and DL_Up when applicable) to first Type 1 Cfg access attempt:  1000ms. ( 100ms max for IL)
Stop On Fail iteration 8000 from beginning of execution (0 value means testing will not stop on any failure)
Reset Mechanism:  ALL
Link Width chosen: x8.
Test Selection: Individual Test Case(s)
Reset LinkSpeed


   Starting Test: TD_1_63 L1 PM Substates Ext Cap Struct
Rst = SBR
LS = 16.0 GT/s	LW = 8
This is a Basic Function.
                  Cap ID     = 0x001E.
                  Cap Ver    = 0x1.
             Next Cap Offset = 0x314.
L1 PM Substates Capabilities = 0x00380A1F.
L1 PM Substates Control 1    = 0x00000A00.
L1 PM Substates Control 2    = 0x00000028.


INI path = /home/sd/cv/PCIeCV-5.0.195.0/linux/hwa/amd64/cv5/ini/1_63.ini
T_POWER_ON Scale attribute(s) modified from ini default;  PCI-PM L1.2 or ASPM L1.2 supported; Test=RW
T_POWER_ON Value attribute(s) modified from ini default;  PCI-PM L1.2 or ASPM L1.2 supported; LDE or SBR; Test=RW, Default=5
PCI-PM L1.2 Enable attribute(s) modified from ini default;  PCI-PM L1.2 supported; Test=RW
ASPM L1.2 Enable attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
LTR_L1.2_THRESHOLD Value attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
LTR_L1.2_THRESHOLD Scale attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
ASPM L1.1 Enable attribute(s) modified from ini default;  ASPM L1.1 supported; Test=RW
Common_Mode_Restore_Time (DwnStr Ports) attribute(s) modified from ini default;  Downstream Port and PCI-PM L1.2 or ASPM L1.2 supported; Test=RW


[L1 PM Substates Extended Capability Header Register : PCI Express Extended Capability ID] 
Default: Expected=0x1E, Actual=0x1E	
 RO 4 byte(s)
Initl  Rd=0x1E	Wr 1's Comp=0x3141FFE1
Actual Rd=0x1E.	Wr 1's     =0x3141FFFF
Actual Rd=0x1E.	
Default: Expected=0x1E, Actual=0x1E	
 RO 2 byte(s)
Initl  Rd=0x1E	Wr 1's Comp=0xFFE1
Actual Rd=0x1E.	Wr 1's     =0xFFFF
Actual Rd=0x1E.	

[L1 PM Substates Extended Capability Header Register : Capability Version] 
Default: Expected=0x1, Actual=0x1	
 RO 4 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x314E001E
Actual Rd=0x1.	Wr 1's     =0x314F001E
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1	
 RO 2 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x4E00
Actual Rd=0x1.	Wr 1's     =0x4F00
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1	
 RO 2 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x314E
Actual Rd=0x1.	Wr 1's     =0x314F
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1	
 RO 1 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x4E
Actual Rd=0x1.	Wr 1's     =0x4F
Actual Rd=0x1.	

[L1 PM Substates Extended Capability Header Register : Next Capability Offset] 
 RO 4 byte(s)
Initl  Rd=0x314	Wr 1's Comp=0xCEB1001E
Actual Rd=0x314.	Wr 1's     =0xFFF1001E
Actual Rd=0x314.	
 RO 2 byte(s)
Initl  Rd=0x314	Wr 1's Comp=0xCEB1
Actual Rd=0x314.	Wr 1's     =0xFFF1
Actual Rd=0x314.	

[L1 PM Substates Capabilities Register : PCI-PM L1.2 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x0	Wr 1's Comp=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : PCI-PM L1.1 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : ASPM L1.2 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : ASPM L1.1 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : L1 PM Substates Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : Link Activation Supported (DwnStr Ports)] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Link Activation Supported (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Capabilities Register : RsvdP_7-6] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port Common_Mode_Restore_Time] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF00
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF00
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port T_POWER_ON Scale] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x30000
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x300
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x3
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x3
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : RsvdP_18] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x40000
Actual Rd=0x0.	Wr 1's     =0x40000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x400
Actual Rd=0x0.	Wr 1's     =0x400
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port T_POWER_ON Value] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF80000
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF800
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF8
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF8
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : RsvdP_31-24] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF000000
Actual Rd=0x0.	Wr 1's     =0xFF000000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF00
Actual Rd=0x0.	Wr 1's     =0xFF00
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Wr 1's     =0xFF
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : PCI-PM L1.2 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : PCI-PM L1.1 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : ASPM L1.2 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : ASPM L1.1 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Interrupt Enable (DwnStr Ports)] 
Default: Expected=0x0, Actual=0x0	
 RWRO 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Interrupt Enable (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : Link Activation Control (DwnStr Ports)] 
Default: Expected=0x0, Actual=0x0	
 RWRO 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Control (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : RsvdP_7-6] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : Common_Mode_Restore_Time (UpStr Ports)]  skipped.	 skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : Common_Mode_Restore_Time (DwnStr Ports)] 
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : LTR_L1.2_THRESHOLD Value] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x100
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x200
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x155
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2AA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3FF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x100
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x200
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x155
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2AA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3FF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : RsvdP_28-26] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C000000
Actual Rd=0x0.	Wr 1's     =0x1C000000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C00
Actual Rd=0x0.	Wr 1's     =0x1C00
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C
Actual Rd=0x0.	Wr 1's     =0x1C
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : LTR_L1.2_THRESHOLD Scale] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 2 Register : T_POWER_ON Scale] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 2 Register : RsvdP_2] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	

[L1 PM Substates Control 2 Register : T_POWER_ON Value] 
ERROR:  
Default: Expected=0x5, Actual=0x0	
FAIL:  All fields must default to any default values specified in the PCIe specification.  

 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.

ERROR:  
Default: Expected=0x5, Actual=0x0	
FAIL:  All fields must default to any default values specified in the PCIe specification.  

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.

ERROR:  
Default: Expected=0x5, Actual=0x0	
FAIL:  All fields must default to any default values specified in the PCIe specification.  

 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.


[L1 PM Substates Control 2 Register : RsvdP_31-8] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFFFFFF00
Actual Rd=0x0.	Wr 1's     =0xFFFFFF00
Actual Rd=0x0.	 skipped.	 skipped.	 skipped.	
Elapsed time: 287 secs.

     Stopping Test: TD_1_63 L1 PM Substates Ext Cap Struct
     Number of: Fails (32); Aborts (0); Warnings (0); Alerts (0); Errors (135)



   Starting Test: TD_1_63 L1 PM Substates Ext Cap Struct
Rst = LDE
LS = 16.0 GT/s	LW = 8
This is a Basic Function.
                  Cap ID     = 0x001E.
                  Cap Ver    = 0x1.
             Next Cap Offset = 0x314.
L1 PM Substates Capabilities = 0x00380A1F.
L1 PM Substates Control 1    = 0x00000A00.
L1 PM Substates Control 2    = 0x00000028.


INI path = /home/sd/cv/PCIeCV-5.0.195.0/linux/hwa/amd64/cv5/ini/1_63.ini
T_POWER_ON Scale attribute(s) modified from ini default;  PCI-PM L1.2 or ASPM L1.2 supported; Test=RW
T_POWER_ON Value attribute(s) modified from ini default;  PCI-PM L1.2 or ASPM L1.2 supported; LDE or SBR; Test=RW, Default=5
PCI-PM L1.2 Enable attribute(s) modified from ini default;  PCI-PM L1.2 supported; Test=RW
ASPM L1.2 Enable attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
LTR_L1.2_THRESHOLD Value attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
LTR_L1.2_THRESHOLD Scale attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
ASPM L1.1 Enable attribute(s) modified from ini default;  ASPM L1.1 supported; Test=RW
Common_Mode_Restore_Time (DwnStr Ports) attribute(s) modified from ini default;  Downstream Port and PCI-PM L1.2 or ASPM L1.2 supported; Test=RW


[L1 PM Substates Extended Capability Header Register : PCI Express Extended Capability ID] 
Default: Expected=0x1E, Actual=0x1E	
 RO 4 byte(s)
Initl  Rd=0x1E	Wr 1's Comp=0x3141FFE1
Actual Rd=0x1E.	Wr 1's     =0x3141FFFF
Actual Rd=0x1E.	
Default: Expected=0x1E, Actual=0x1E	
 RO 2 byte(s)
Initl  Rd=0x1E	Wr 1's Comp=0xFFE1
Actual Rd=0x1E.	Wr 1's     =0xFFFF
Actual Rd=0x1E.	

[L1 PM Substates Extended Capability Header Register : Capability Version] 
Default: Expected=0x1, Actual=0x1	
 RO 4 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x314E001E
Actual Rd=0x1.	Wr 1's     =0x314F001E
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1	
 RO 2 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x4E00
Actual Rd=0x1.	Wr 1's     =0x4F00
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1	
 RO 2 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x314E
Actual Rd=0x1.	Wr 1's     =0x314F
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1	
 RO 1 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x4E
Actual Rd=0x1.	Wr 1's     =0x4F
Actual Rd=0x1.	

[L1 PM Substates Extended Capability Header Register : Next Capability Offset] 
 RO 4 byte(s)
Initl  Rd=0x314	Wr 1's Comp=0xCEB1001E
Actual Rd=0x314.	Wr 1's     =0xFFF1001E
Actual Rd=0x314.	
 RO 2 byte(s)
Initl  Rd=0x314	Wr 1's Comp=0xCEB1
Actual Rd=0x314.	Wr 1's     =0xFFF1
Actual Rd=0x314.	

[L1 PM Substates Capabilities Register : PCI-PM L1.2 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : PCI-PM L1.1 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : ASPM L1.2 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : ASPM L1.1 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : L1 PM Substates Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : Link Activation Supported (DwnStr Ports)] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Link Activation Supported (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Capabilities Register : RsvdP_7-6] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port Common_Mode_Restore_Time] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF00
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF00
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port T_POWER_ON Scale] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x30000
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x300
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x3
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x3
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : RsvdP_18] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x40000
Actual Rd=0x0.	Wr 1's     =0x40000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x400
Actual Rd=0x0.	Wr 1's     =0x400
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port T_POWER_ON Value] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF80000
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF800
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF8
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF8
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : RsvdP_31-24] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF000000
Actual Rd=0x0.	Wr 1's     =0xFF000000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF00
Actual Rd=0x0.	Wr 1's     =0xFF00
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Wr 1's     =0xFF
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : PCI-PM L1.2 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : PCI-PM L1.1 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : ASPM L1.2 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : ASPM L1.1 Enable] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Interrupt Enable (DwnStr Ports)] 
Default: Expected=0x0, Actual=0x0	
 RWRO 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Interrupt Enable (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : Link Activation Control (DwnStr Ports)] 
Default: Expected=0x0, Actual=0x0	
 RWRO 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RWRO 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Control (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : RsvdP_7-6] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : Common_Mode_Restore_Time (UpStr Ports)]  skipped.	 skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : Common_Mode_Restore_Time (DwnStr Ports)] 
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : LTR_L1.2_THRESHOLD Value] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x100
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x200
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x155
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2AA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3FF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x100
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x200
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x155
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2AA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3FF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : RsvdP_28-26] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C000000
Actual Rd=0x0.	Wr 1's     =0x1C000000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C00
Actual Rd=0x0.	Wr 1's     =0x1C00
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C
Actual Rd=0x0.	Wr 1's     =0x1C
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : LTR_L1.2_THRESHOLD Scale] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 2 Register : T_POWER_ON Scale] 
Default: Expected=0x0, Actual=0x0	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 2 Register : RsvdP_2] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	

[L1 PM Substates Control 2 Register : T_POWER_ON Value] 
ERROR:  
Default: Expected=0x5, Actual=0x0	
FAIL:  All fields must default to any default values specified in the PCIe specification.  

 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.

ERROR:  
Default: Expected=0x5, Actual=0x0	
FAIL:  All fields must default to any default values specified in the PCIe specification.  

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.

ERROR:  
Default: Expected=0x5, Actual=0x0	
FAIL:  All fields must default to any default values specified in the PCIe specification.  

 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.


[L1 PM Substates Control 2 Register : RsvdP_31-8] 
Default: Expected=0x0, Actual=0x0	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFFFFFF00
Actual Rd=0x0.	Wr 1's     =0xFFFFFF00
Actual Rd=0x0.	 skipped.	 skipped.	 skipped.	
Elapsed time: 286 secs.

     Stopping Test: TD_1_63 L1 PM Substates Ext Cap Struct
     Number of: Fails (33); Aborts (0); Warnings (0); Alerts (0); Errors (136)



   Starting Test: TD_1_63 L1 PM Substates Ext Cap Struct
Rst = NOT
LS = 16.0 GT/s	LW = 8
This is a Basic Function.
                  Cap ID     = 0x001E.
                  Cap Ver    = 0x1.
             Next Cap Offset = 0x314.
L1 PM Substates Capabilities = 0x00380A1F.
L1 PM Substates Control 1    = 0x00000A00.
L1 PM Substates Control 2    = 0x00000028.


INI path = /home/sd/cv/PCIeCV-5.0.195.0/linux/hwa/amd64/cv5/ini/1_63.ini
T_POWER_ON Scale attribute(s) modified from ini default;  PCI-PM L1.2 or ASPM L1.2 supported; Test=RW
T_POWER_ON Value attribute(s) modified from ini default;  PCI-PM L1.2 or ASPM L1.2 supported; not LDE or SBR; Test=RW
PCI-PM L1.2 Enable attribute(s) modified from ini default;  PCI-PM L1.2 supported; Test=RW
ASPM L1.2 Enable attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
LTR_L1.2_THRESHOLD Value attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
LTR_L1.2_THRESHOLD Scale attribute(s) modified from ini default;  ASPM L1.2 supported; Test=RW
ASPM L1.1 Enable attribute(s) modified from ini default;  ASPM L1.1 supported; Test=RW
Common_Mode_Restore_Time (DwnStr Ports) attribute(s) modified from ini default;  Downstream Port and PCI-PM L1.2 or ASPM L1.2 supported; Test=RW


[L1 PM Substates Extended Capability Header Register : PCI Express Extended Capability ID] 
Default: Expected=0x1E, Actual=0x1E using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x1E	Wr 1's Comp=0x3141FFE1
Actual Rd=0x1E.	Wr 1's     =0x3141FFFF
Actual Rd=0x1E.	
Default: Expected=0x1E, Actual=0x1E using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x1E	Wr 1's Comp=0xFFE1
Actual Rd=0x1E.	Wr 1's     =0xFFFF
Actual Rd=0x1E.	

[L1 PM Substates Extended Capability Header Register : Capability Version] 
Default: Expected=0x1, Actual=0x1 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x314E001E
Actual Rd=0x1.	Wr 1's     =0x314F001E
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x4E00
Actual Rd=0x1.	Wr 1's     =0x4F00
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x314E
Actual Rd=0x1.	Wr 1's     =0x314F
Actual Rd=0x1.	
Default: Expected=0x1, Actual=0x1 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x1	Wr 1's Comp=0x4E
Actual Rd=0x1.	Wr 1's     =0x4F
Actual Rd=0x1.	

[L1 PM Substates Extended Capability Header Register : Next Capability Offset] 
 RO 4 byte(s)
Initl  Rd=0x314	Wr 1's Comp=0xCEB1001E
Actual Rd=0x314.	Wr 1's     =0xFFF1001E
Actual Rd=0x314.	
 RO 2 byte(s)
Initl  Rd=0x314	Wr 1's Comp=0xCEB1
Actual Rd=0x314.	Wr 1's     =0xFFF1
Actual Rd=0x314.	

[L1 PM Substates Capabilities Register : PCI-PM L1.2 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : PCI-PM L1.1 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : ASPM L1.2 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : ASPM L1.1 Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : L1 PM Substates Supported] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 

 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Wr=0x1, Actual Rd = 0x1, The Read-only field changed.
Field value is allowed to change once...Re-test it a 2nd time...
Initl  Rd=0x1	Wr 1's Comp=0x0
Wr=0x0, Actual Rd = 0x0, The Read-only field changed.

ERROR:  Field value changed twice.
Initl  Rd=0x0	Wr 1's=0x0
Actual Rd=0x0.	
FAIL:  Hardware initialized (HwInit) fields implemented according to 
the PCIe specification can only be set by hardware or 
firmware mechanisms.  After initialization they are read only but 
must be reset with Fundamental reset.  Note:  HWINIT fields 
may also be implemented as read only.
Note:  Firmware initialization is only allowed for system 
integrated devices. 


[L1 PM Substates Capabilities Register : Link Activation Supported (DwnStr Ports)] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x20
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Link Activation Supported (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Capabilities Register : RsvdP_7-6] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port Common_Mode_Restore_Time] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF00
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF00
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xFF
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port T_POWER_ON Scale] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x30000
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x300
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x3
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x3
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0x3
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : RsvdP_18] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x40000
Actual Rd=0x0.	Wr 1's     =0x40000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x400
Actual Rd=0x0.	Wr 1's     =0x400
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : Port T_POWER_ON Value] 
 HwInit 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF80000
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF800
Actual Rd=0x0.	
 HwInit 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF8
Actual Rd=0x0.	
 HwInit 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1F
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's=0xF8
Actual Rd=0x0.	

[L1 PM Substates Capabilities Register : RsvdP_31-24] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF000000
Actual Rd=0x0.	Wr 1's     =0xFF000000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF00
Actual Rd=0x0.	Wr 1's     =0xFF00
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFF
Actual Rd=0x0.	Wr 1's     =0xFF
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : PCI-PM L1.2 Enable] 
Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : PCI-PM L1.1 Enable] 
Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : ASPM L1.2 Enable] 
Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : ASPM L1.1 Enable] 
Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x1, Actual=0x1 using Type=RWS	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x1.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Interrupt Enable (DwnStr Ports)] 
Default: Expected=0x0, Actual=0x0 using Type=RWSRO	
 RWRO 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWSRO	
 RWRO 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWSRO	
 RWRO 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x10
Actual Rd=0x0.	Wr 1's     =0x10
Actual Rd=0x0.	Link Activation Interrupt Enable (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Interrupt Enable (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : Link Activation Control (DwnStr Ports)] 
Default: Expected=0x0, Actual=0x0 using Type=RWSRO	
 RWRO 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWSRO	
 RWRO 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWSRO	
 RWRO 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr 1's Comp=0x20
Actual Rd=0x0.	Wr 1's     =0x20
Actual Rd=0x0.	Link Activation Control (DwnStr Ports) - RW test mis-match, but passed RO portion of test.	Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : Link Activation Control (UpStr Ports)]  skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : RsvdP_7-6] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xC0
Actual Rd=0x0.	Wr 1's     =0xC0
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : Common_Mode_Restore_Time (UpStr Ports)]  skipped.	 skipped.	 skipped.	 skipped.	

[L1 PM Substates Control 1 Register : Common_Mode_Restore_Time (DwnStr Ports)] 
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x55
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xAA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xFF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : LTR_L1.2_THRESHOLD Value] 
Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x100
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x200
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x155
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2AA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3FF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x20
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x40
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x80
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x100
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x200
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x155
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2AA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3FF
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 1 Register : RsvdP_28-26] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C000000
Actual Rd=0x0.	Wr 1's     =0x1C000000
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C00
Actual Rd=0x0.	Wr 1's     =0x1C00
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x1C
Actual Rd=0x0.	Wr 1's     =0x1C
Actual Rd=0x0.	

[L1 PM Substates Control 1 Register : LTR_L1.2_THRESHOLD Scale] 
Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x5
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 2 Register : T_POWER_ON Scale] 
Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.

Default: Expected=0x0, Actual=0x0 using Type=RWS	
 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x3
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x0
Actual Rd=0x0.	<- Rest.


[L1 PM Substates Control 2 Register : RsvdP_2] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 2 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 1 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0x4
Actual Rd=0x0.	Wr 1's     =0x4
Actual Rd=0x0.	

[L1 PM Substates Control 2 Register : T_POWER_ON Value] 
 RW 4 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.

 RW 2 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.

 RW 1 byte(s)
Initl  Rd=0x0	Wr=0x1
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x2
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x4
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x8
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x10
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	Initl  Rd=0x0	Wr=0x15
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0xA
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x1F
Actual Rd=0x0, RW mis-match.

ERROR:   RW test mis-match.
Initl  Rd=0x0	Wr=0x0
Actual Rd=0x0.	
FAIL:  Any read-write register fields (RW) must be settable and 
clearable by software. 
Wr=0x5
Actual Rd=0x0, RW mis-match.
<- Rest.


[L1 PM Substates Control 2 Register : RsvdP_31-8] 
Default: Expected=0x0, Actual=0x0 using Type=ROS	
 RO 4 byte(s)
Initl  Rd=0x0	Wr 1's Comp=0xFFFFFF00
Actual Rd=0x0.	Wr 1's     =0xFFFFFF00
Actual Rd=0x0.	 skipped.	 skipped.	 skipped.	
Elapsed time: 0 secs.

     Stopping Test: TD_1_63 L1 PM Substates Ext Cap Struct
     Number of: Fails (30); Aborts (0); Warnings (0); Alerts (0); Errors (133)

Failed:    SBR  16.0 GT/s  TD_1_63 L1 PM Substates Ext Cap Struct
Failed:    LDE  16.0 GT/s  TD_1_63 L1 PM Substates Ext Cap Struct
Failed:    NOT  16.0 GT/s  TD_1_63 L1 PM Substates Ext Cap Struct
           Cumulative Test Summary
       Number of Tests SKIPPED:       0
       Number of Tests PASSED:        0
       Number of Tests FAILED:        3
 Total Number of Tests RUN:           3

Elapsed time: 9:33
Test(s) completed at 2025/03/17 22:47:02
End of PCIECV Testing.
Total Log Summary [ Fails (95); Aborts (0); Warnings (0); Alerts (0); Errors (404) ]
